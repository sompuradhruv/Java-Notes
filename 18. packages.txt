There are three ways to access the package from outside the package.

import package.*;
If you use package.* then all the classes
and interfaces of this package will be 
accessible but not subpackages. 
The import keyword is used to make the 
classes and interface of another package 
accessible to the current package.

import package.classname;
If you import package.classname then only
declared class of this package will be accessible.

fully qualified name.
If you use fully qualified name then only declared class of this package will be accessible. 
Now there is no need to import. But you need to use fully qualified name every time when you are accessing the class or interface.
It is generally used when two packages have same class name e.g. java.util and java.sql packages contain Date class.

eg.
package pack;  
public class A{  
public void msg(){
System.out.println("Hello");
}  
}  
//save by B.java  
package mypack;  
class B{  
  public static void main(String args[]){  
   pack.A obj = new pack.A();
   //using fully qualified name  
   obj.msg();  
  }  
}  
Output:Hello 

subpackage:
eg. In this example, we created 
a package LearnJava and 
a sub package corejava in the Simple.java file.

package LearnJava.corejava;
class Simple{
  public static void main(String args[]){
   System.out.println("Hello from subpackage");
  }
}


